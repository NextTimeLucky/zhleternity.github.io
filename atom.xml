<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog of zhleternity</title>
  <subtitle>Step by step</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhleternity.github.io/"/>
  <updated>2017-02-28T07:43:14.631Z</updated>
  <id>http://zhleternity.github.io/</id>
  
  <author>
    <name>zhleternity</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Learn to train and predict model under MXNet</title>
    <link href="http://zhleternity.github.io/2017/02/28/Learn-to-train-and-predict-model-under-MXNet/"/>
    <id>http://zhleternity.github.io/2017/02/28/Learn-to-train-and-predict-model-under-MXNet/</id>
    <published>2017-02-28T01:53:45.335Z</published>
    <updated>2017-02-28T07:43:14.631Z</updated>
    
    <content type="html"><![CDATA[<p>##Prepare the input data<br>Because the input data’s formt of MXNet is rec,so we must turn the image into the .rec format,as folow:</p>
<p>First, we prepare some face images data stored in ‘test_face’ file:</p>
<p><img src="http://i.imgur.com/A1vbdS7.png" alt=""></p>
<p>  step1:build the txt or lst format from the images<br>Now,we have so many images in hand.Next,we make some changes to them that generate a list or a txt about the images.As for the list or txt,its format as folllows:</p>
<p><img src="http://i.imgur.com/69EmuV4.png" alt=""><br>To see explicitly,we can see an image below:</p>
<p><img src="http://i.imgur.com/nGcVVdW.png" alt=""></p>
<p>Of course, we still need the test.lst or test.txt.</p>
<p>  step2:generate the .rec from txt or lst</p>
<p>Under our MXNet root diretory,we can see</p>
<p><img src="http://i.imgur.com/KKjUbzZ.png" alt=""></p>
<p>so,we can build the rec doc by using ‘im2rec’.</p>
<p>The comman as folows:</p>
<p><img src="http://i.imgur.com/RpqcNnZ.png" alt=""></p>
<p>Here,we can see three parameters.They are:</p>
<p>the first param: the path of your lst or txt have been build;</p>
<p>the second one: the path of your images;</p>
<p>the third one: the path of your .rec.</p>
<p>OK,so far we have the rec doc of train data,but we still lack the rec of test data.In that,we can generate the test.rec with the same method.Finally,you can get four files:</p>
<p><img src="http://i.imgur.com/C2Um9eF.png" alt=""></p>
<p>Good luck! </p>
<a id="more"></a>
<p>##Construct the net<br>In this step,we can construct the net ourselves,but at first best do not.Because we can use the off-the-shelf models or net to achieve more higher use.And furthermore,it can save twists and turns at first.And it is so-called ‘standing on the shoulders of giants’.Hence,the simplest way is to make a little change on the off-th-shelf net.</p>
<p>As for the off-the-shelf examples,we can find under ‘mxnet/examples/image-classification/‘ and ‘mxnet/tests/python/‘ .</p>
<p>step1:New a folder named ‘MyTrainMxnet’;the folder path is freewill;</p>
<p>step2:Copy four files below to th new folder ‘MyTrainMxnet’;</p>
<p><img src="http://i.imgur.com/CxEZ7uL.png" alt=""></p>
<p>Attention:Here we choose the ineption-bn-28-small net,of course, you can choose others,e.g alexnet..</p>
<p>step3:Let’s make some changes.</p>
<p>1.Rename the ‘symbol_inception-bn-28-small.py’ as ‘my-inception.py’;</p>
<p>2.Rename the ‘train_mnist.py’ as ‘train_face.py’;</p>
<p>3.Open ‘train_face.py’ and do some changes;</p>
<p><img src="http://i.imgur.com/VaqYxSF.png" alt=""></p>
<p><img src="http://i.imgur.com/qwSMJeE.png" alt=""></p>
<p><img src="http://i.imgur.com/0f8EGow.png" alt=""></p>
<p>Delete the ‘symbol’,otherwise your model file must begin with ‘symbol’.</p>
<p>##Train the model</p>
<p>Of course we can choose not  do these changes.Instead,we can add ‘–network’ and ‘–data-dir’ in the command,as folows:</p>
<p><img src="http://i.imgur.com/PmhYA4P.png" alt=""></p>
<p>In addition, we can add other params if we need in the command above.</p>
<p>Attention:If you want to save the trained-well model after every epoch,please must add ‘–model-prefix’.And you will get it when making prediction afterwards.</p>
<p><img src="http://i.imgur.com/oaNWGT0.png" alt=""></p>
<p>Ok,the training step may need much time when cpu-only.So we can wait in patience.</p>
<p>##Make a prediction</p>
<p>When you complete the training work,you will find:</p>
<p><img src="http://i.imgur.com/zZXCneQ.png" alt=""></p>
<p>Now,we can make a prediction using the test data.</p>
<p>First,we need write a prediction file named ‘predict_face.py’,its contents as follow:</p>
<p><img src="http://i.imgur.com/F4bju8C.png" alt=""></p>
<p>Attention:Remember to change the path into yours.</p>
<p>Ok,hereto it’s over.</p>
<p>If yu want to make predition using new data,please keep attention.</p>
<p>Be continued!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##Prepare the input data&lt;br&gt;Because the input data’s formt of MXNet is rec,so we must turn the image into the .rec format,as folow:&lt;/p&gt;
&lt;p&gt;First, we prepare some face images data stored in ‘test_face’ file:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/A1vbdS7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;  step1:build the txt or lst format from the images&lt;br&gt;Now,we have so many images in hand.Next,we make some changes to them that generate a list or a txt about the images.As for the list or txt,its format as folllows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/69EmuV4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;To see explicitly,we can see an image below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/nGcVVdW.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Of course, we still need the test.lst or test.txt.&lt;/p&gt;
&lt;p&gt;  step2:generate the .rec from txt or lst&lt;/p&gt;
&lt;p&gt;Under our MXNet root diretory,we can see&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/KKjUbzZ.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;so,we can build the rec doc by using ‘im2rec’.&lt;/p&gt;
&lt;p&gt;The comman as folows:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/RpqcNnZ.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here,we can see three parameters.They are:&lt;/p&gt;
&lt;p&gt;the first param: the path of your lst or txt have been build;&lt;/p&gt;
&lt;p&gt;the second one: the path of your images;&lt;/p&gt;
&lt;p&gt;the third one: the path of your .rec.&lt;/p&gt;
&lt;p&gt;OK,so far we have the rec doc of train data,but we still lack the rec of test data.In that,we can generate the test.rec with the same method.Finally,you can get four files:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/C2Um9eF.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Good luck! &lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>my-first-blog</title>
    <link href="http://zhleternity.github.io/2017/02/23/my-first-blog/"/>
    <id>http://zhleternity.github.io/2017/02/23/my-first-blog/</id>
    <published>2017-02-23T08:45:11.000Z</published>
    <updated>2017-02-24T08:18:51.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="http://i.imgur.com/7VAktrP.jpg" alt=""></p>
<p>使用github pages服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>
</ol>
<a id="more"></a>
<ol>
<li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
<li>等等；</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/7VAktrP.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用github pages服务搭建博客的好处有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;全是静态文件，访问速度快；&lt;/li&gt;
&lt;li&gt;免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；&lt;/li&gt;
&lt;li&gt;可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zhleternity.github.io/2017/02/23/hello-world/"/>
    <id>http://zhleternity.github.io/2017/02/23/hello-world/</id>
    <published>2017-02-23T08:21:07.826Z</published>
    <updated>2017-02-24T08:25:53.385Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/OJnBd57.jpg" alt=""><br>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://i.imgur.com/OJnBd57.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This 
    
    </summary>
    
    
  </entry>
  
</feed>
